// Script de test pour v√©rifier la configuration Supabase
// Ex√©cuter avec: node test-supabase.js

// Charger les variables d'environnement
require('dotenv').config({ path: '.env.local' })

const { createClient } = require('@supabase/supabase-js')

// V√©rifier les variables d'environnement
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL
const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY

console.log('üîç V√©rification de la configuration Supabase...\n')

console.log('Variables d\'environnement :')
console.log('- NEXT_PUBLIC_SUPABASE_URL:', supabaseUrl ? '‚úÖ D√©finie' : '‚ùå Manquante')
console.log('- NEXT_PUBLIC_SUPABASE_ANON_KEY:', supabaseAnonKey ? '‚úÖ D√©finie' : '‚ùå Manquante')
console.log('- SUPABASE_SERVICE_ROLE_KEY:', supabaseServiceKey ? '‚úÖ D√©finie' : '‚ùå Manquante')

if (!supabaseUrl || !supabaseAnonKey) {
  console.log('\n‚ùå Configuration incompl√®te. V√©rifiez votre fichier .env.local')
  process.exit(1)
}

// Tester la connexion avec la cl√© anonyme
console.log('\nüîó Test de connexion avec la cl√© anonyme...')
const supabase = createClient(supabaseUrl, supabaseAnonKey)

supabase.auth.getSession()
  .then(({ data, error }) => {
    if (error) {
      console.log('‚ùå Erreur de connexion:', error.message)
    } else {
      console.log('‚úÖ Connexion r√©ussie avec la cl√© anonyme')
    }
  })
  .catch((error) => {
    console.log('‚ùå Erreur inattendue:', error.message)
  })

// Tester la connexion avec la cl√© service role si disponible
if (supabaseServiceKey) {
  console.log('\nüîó Test de connexion avec la cl√© service role...')
  const supabaseAdmin = createClient(supabaseUrl, supabaseServiceKey, {
    auth: {
      autoRefreshToken: false,
      persistSession: false
    }
  })

  supabaseAdmin.from('users').select('count').limit(1)
    .then(({ data, error }) => {
      if (error) {
        console.log('‚ùå Erreur avec la cl√© service role:', error.message)
      } else {
        console.log('‚úÖ Connexion r√©ussie avec la cl√© service role')
      }
    })
    .catch((error) => {
      console.log('‚ùå Erreur inattendue avec la cl√© service role:', error.message)
    })
} else {
  console.log('\n‚ö†Ô∏è  Cl√© service role non d√©finie - test ignor√©')
}

console.log('\nüìã Instructions :')
console.log('1. V√©rifiez que votre fichier .env.local contient toutes les variables')
console.log('2. Assurez-vous que le sch√©ma de base de donn√©es est cr√©√©')
console.log('3. Testez l\'application sur http://localhost:3000/debug')
